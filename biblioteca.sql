-- MySQL Script generated by MySQL Workbench
-- Wed Mar 15 09:12:52 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema biblioteca
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema biblioteca
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `biblioteca` DEFAULT CHARACTER SET utf8 ;
USE `biblioteca` ;

-- -----------------------------------------------------
-- Table `biblioteca`.`editoriales`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `biblioteca`.`editoriales` ;

CREATE TABLE IF NOT EXISTS `biblioteca`.`editoriales` (
  `ideditoriales` INT NOT NULL,
  `nombre` VARCHAR(255) NULL,
  PRIMARY KEY (`ideditoriales`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `biblioteca`.`libros`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `biblioteca`.`libros` ;

CREATE TABLE IF NOT EXISTS `biblioteca`.`libros` (
  `idlibros` INT NOT NULL AUTO_INCREMENT,
  `ISBN` VARCHAR(45) NULL,
  `titulo` VARCHAR(255) NULL,
  `edicion` VARCHAR(255) NULL,
  `fechaImp` DATE NULL,
  `genero` VARCHAR(255) NULL,
  `cantidadTotal` INT NULL,
  `cantidadDisp` INT NULL,
  `tipo` INT NULL,
  `editoriales_ideditoriales` INT NOT NULL,
  PRIMARY KEY (`idlibros`, `editoriales_ideditoriales`),
  INDEX `fk_libros_editoriales1_idx` (`editoriales_ideditoriales` ASC),
  CONSTRAINT `fk_libros_editoriales1`
    FOREIGN KEY (`editoriales_ideditoriales`)
    REFERENCES `biblioteca`.`editoriales` (`ideditoriales`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `biblioteca`.`usuarios`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `biblioteca`.`usuarios` ;

CREATE TABLE IF NOT EXISTS `biblioteca`.`usuarios` (
  `idusuarios` INT NOT NULL AUTO_INCREMENT,
  `usuario` VARCHAR(45) NULL,
  `password` VARCHAR(45) NULL,
  PRIMARY KEY (`idusuarios`),
  UNIQUE INDEX `usuario_UNIQUE` (`usuario` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `biblioteca`.`prestamos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `biblioteca`.`prestamos` ;

CREATE TABLE IF NOT EXISTS `biblioteca`.`prestamos` (
  `idprestamos` INT NOT NULL,
  `fechaIni` DATE NULL,
  `fechaFin` DATE NULL,
  `estado` VARCHAR(255) NULL,
  `libros_idlibros` INT NOT NULL,
  `usuarios_idusuarios` INT NOT NULL,
  PRIMARY KEY (`idprestamos`),
  INDEX `fk_prestamos_libros1_idx` (`libros_idlibros` ASC),
  INDEX `fk_prestamos_usuarios1_idx` (`usuarios_idusuarios` ASC),
  CONSTRAINT `fk_prestamos_libros1`
    FOREIGN KEY (`libros_idlibros`)
    REFERENCES `biblioteca`.`libros` (`idlibros`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_prestamos_usuarios1`
    FOREIGN KEY (`usuarios_idusuarios`)
    REFERENCES `biblioteca`.`usuarios` (`idusuarios`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `biblioteca`.`autores`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `biblioteca`.`autores` ;

CREATE TABLE IF NOT EXISTS `biblioteca`.`autores` (
  `idautores` INT NOT NULL,
  `nombre` VARCHAR(255) NULL,
  PRIMARY KEY (`idautores`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `biblioteca`.`libros_has_autores`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `biblioteca`.`libros_has_autores` ;

CREATE TABLE IF NOT EXISTS `biblioteca`.`libros_has_autores` (
  `libros_idlibros` INT NOT NULL,
  `autores_idautores` INT NOT NULL,
  PRIMARY KEY (`libros_idlibros`, `autores_idautores`),
  INDEX `fk_libros_has_autores_autores1_idx` (`autores_idautores` ASC),
  INDEX `fk_libros_has_autores_libros1_idx` (`libros_idlibros` ASC),
  CONSTRAINT `fk_libros_has_autores_libros1`
    FOREIGN KEY (`libros_idlibros`)
    REFERENCES `biblioteca`.`libros` (`idlibros`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_libros_has_autores_autores1`
    FOREIGN KEY (`autores_idautores`)
    REFERENCES `biblioteca`.`autores` (`idautores`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `biblioteca`.`alumnos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `biblioteca`.`alumnos` ;

CREATE TABLE IF NOT EXISTS `biblioteca`.`alumnos` (
  `idalumnos` INT NOT NULL AUTO_INCREMENT,
  `matricula` VARCHAR(45) NULL,
  `nombre` VARCHAR(255) NULL,
  `apellido` VARCHAR(255) NULL,
  `usuarios_idusuarios` INT NOT NULL,
  PRIMARY KEY (`idalumnos`),
  INDEX `fk_alumnos_usuarios1_idx` (`usuarios_idusuarios` ASC),
  CONSTRAINT `fk_alumnos_usuarios1`
    FOREIGN KEY (`usuarios_idusuarios`)
    REFERENCES `biblioteca`.`usuarios` (`idusuarios`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `biblioteca`.`profesores`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `biblioteca`.`profesores` ;

CREATE TABLE IF NOT EXISTS `biblioteca`.`profesores` (
  `idprofesores` INT NOT NULL AUTO_INCREMENT,
  `numColaborador` INT NULL,
  `nombre` VARCHAR(255) NULL,
  `apellido` VARCHAR(255) NULL,
  `usuarios_idusuarios` INT NOT NULL,
  PRIMARY KEY (`idprofesores`),
  INDEX `fk_profesores_usuarios1_idx` (`usuarios_idusuarios` ASC),
  CONSTRAINT `fk_profesores_usuarios1`
    FOREIGN KEY (`usuarios_idusuarios`)
    REFERENCES `biblioteca`.`usuarios` (`idusuarios`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
